const translate = require('@vitalets/google-translate-api');

exports.regionalToText = function (reg) {
    const regAlphabet = 'ğŸ‡¦ğŸ‡§ğŸ‡¨ğŸ‡©ğŸ‡ªğŸ‡«ğŸ‡¬ğŸ‡­ğŸ‡®ğŸ‡¯ğŸ‡°ğŸ‡±ğŸ‡²ğŸ‡³ğŸ‡´ğŸ‡µğŸ‡¶ğŸ‡·ğŸ‡¸ğŸ‡¹ğŸ‡ºğŸ‡»ğŸ‡¼ğŸ‡½ğŸ‡¾ğŸ‡¿';
    const alphabet = 'a b c d e f g h i j k l m n o p q r s t u v w x y z';
    let langTo = '';
    // Convert to normal ascii
    for (const c of reg) {
        langTo += alphabet.charAt(regAlphabet.search(c));
    }
    switch(langTo) {
        case ca:
        case us:
        case gb:
        case au:
            langTo = 'en';
            break;
        case ee:
            langTo = 'et';
            break;
        case jp:
            langTo = 'ja';
            break;
    }
    return langTo;
}

exports.textToRegional = function (text) {
    const regAlphabet = ['ğŸ‡¦', 'ğŸ‡§', 'ğŸ‡¨', ,'ğŸ‡©', 'ğŸ‡ª', 'ğŸ‡«', 'ğŸ‡¬', 'ğŸ‡­', 'ğŸ‡®', 'ğŸ‡¯', 'ğŸ‡°', 'ğŸ‡±', 'ğŸ‡²', 'ğŸ‡³', 'ğŸ‡´', 'ğŸ‡µ', 'ğŸ‡¶', 'ğŸ‡·', 'ğŸ‡¸', 'ğŸ‡¹', 'ğŸ‡º', 'ğŸ‡»', 'ğŸ‡¼', 'ğŸ‡½', 'ğŸ‡¾', 'ğŸ‡¿'];
    const alphabet = '.abcdefghijklmnopqrstuvwxyz';
    let regTo = '';
    for (const c of text) {
        regTo += regAlphabet[alphabet.search(c)];
    }
    // If lang not found, parse english regional flags
    switch(regTo) {
        case 'ğŸ‡ªğŸ‡³':
            regTo = 'ğŸ‡¬ğŸ‡§';
            break;
        case 'ğŸ‡ªğŸ‡¹':
            regTo = 'ğŸ‡ªğŸ‡ª';
            break;
        case 'ğŸ‡¯ğŸ‡¦':
            regTo = 'ğŸ‡¯ğŸ‡µ';

    }
    // Parse the language
    return regTo;
}

exports.translateTo = async function (to, text) {
    try {
        const translation = await translate(text, {to: to});
        return translation;
    }
    catch(err) {
        console.log(err);
    }
}